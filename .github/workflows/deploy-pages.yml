name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '**.html'
      - '**.js'
      - '**.css'
      - 'manifest.json'
      - 'icons/**'
      - 'styles/**'
      - '_redirects'
      - 'wrangler.pages.toml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: eatinator
          directory: .
          # Optional: Use specific branch for deployment
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Deploy Worker (if changed)
        if: github.ref == 'refs/heads/main'
        run: |
          # Only deploy worker on main branch changes
          if git diff --quiet HEAD~1 HEAD -- workers/ wrangler.toml; then
            echo "No worker changes detected, skipping worker deployment"
          else
            echo "Worker changes detected, deploying..."
            npx wrangler deploy --env production
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          
      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              per_page: 1
            });
            
            if (deployment.length > 0) {
              const deploymentUrl = `https://${context.sha.substring(0, 8)}.eatinator.pages.dev`;
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `ðŸš€ **Cloudflare Pages Deployment**\n\nâœ… **Frontend**: ${deploymentUrl}\n\n_This deployment will be available for testing once the build completes._`
              });
            }